Index: LJ Watch/src/main/java/com/lchrislee/longjourney/activities/SpoilsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- LJ Watch/src/main/java/com/lchrislee/longjourney/activities/SpoilsActivity.java	(revision 258a7390cb6c1f55b02f1a20f8383fdc2bfe7af3)
+++ LJ Watch/src/main/java/com/lchrislee/longjourney/activities/SpoilsActivity.java	(revision )
@@ -13,6 +13,7 @@
 import com.lchrislee.longjourney.model.actors.Monster;
 import com.lchrislee.longjourney.model.actors.Player;
 import com.lchrislee.longjourney.utility.BattleUtility;
+import com.lchrislee.longjourney.utility.NotificationUtility;
 
 public class SpoilsActivity extends Activity {
     public static final String CONCLUSION = "com.lchrislee.longjourney.activities.SpoilsActivity.CONCLUSION";
@@ -36,6 +37,7 @@
         Intent i = getIntent();
         if (i != null){
             conclusion = i.getIntExtra(CONCLUSION, -1);
+            NotificationUtility.cancelNotification(this);
         }
 
         player = ((LongJourneyApplication) getApplication()).getPlayer();
Index: LJ Watch/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- LJ Watch/build.gradle	(revision 258a7390cb6c1f55b02f1a20f8383fdc2bfe7af3)
+++ LJ Watch/build.gradle	(revision )
@@ -2,13 +2,13 @@
 
 
 android {
-    compileSdkVersion 24
+    compileSdkVersion 23
     buildToolsVersion "23.0.2"
 
     defaultConfig {
         applicationId "com.lchrislee.longjourney"
         minSdkVersion 20
-        targetSdkVersion 24
+        targetSdkVersion 23
         versionCode 1
         versionName "1.0"
     }
@@ -23,7 +23,7 @@
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
     compile 'com.google.android.support:wearable:2.0.0-alpha2'
-    compile 'com.android.support:support-v4:24.0.0'
+    compile 'com.android.support:support-v4:23.3.0'
     compile 'com.google.android.gms:play-services-wearable:9.2.1'
-    compile 'com.android.support:percent:24.0.0'
+    compile 'com.android.support:percent:23.3.0'
 }
Index: LJ Watch/src/main/java/com/lchrislee/longjourney/utility/NotificationUtility.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- LJ Watch/src/main/java/com/lchrislee/longjourney/utility/NotificationUtility.java	(revision 258a7390cb6c1f55b02f1a20f8383fdc2bfe7af3)
+++ LJ Watch/src/main/java/com/lchrislee/longjourney/utility/NotificationUtility.java	(revision )
@@ -1,5 +1,6 @@
 package com.lchrislee.longjourney.utility;
 
+import android.app.NotificationManager;
 import android.app.PendingIntent;
 import android.content.Context;
 import android.content.Intent;
@@ -21,17 +22,16 @@
  */
 public class NotificationUtility {
 
-    public static final int NOTIFICATION_IDENTIFIER_BATTLE = 0; // TODO MAKE THESE BETTER
-    public static final int NOTIFICATION_IDENTIFIER_BATTLE_FIGHT = 1;
-    public static final int NOTIFICATION_IDENTIFIER_BATTLE_SNEAK = 2;
-    public static final int NOTIFICATION_IDENTIFIER_BATTLE_RUN = 3;
+    private static int notificationNumber = 0;
 
     public static void launchBattleNotification(@NonNull Context context, @DrawableRes int monsterBackground){
-        ArrayList<NotificationCompat.Action> potentialActions = generateBattleActions(context);
+        cancelNotification(context);
 
         NotificationCompat.WearableExtender extender = new NotificationCompat.WearableExtender();
         extender.setContentIntentAvailableOffline(true);
         extender.setBackground(BitmapFactory.decodeResource(context.getResources(), monsterBackground));
+
+        ArrayList<NotificationCompat.Action> potentialActions = generateBattleActions(context);
         extender.addActions(potentialActions);
 
         NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(context);
@@ -40,10 +40,10 @@
                 .setContentText("What will you do?")
                 .setLocalOnly(true)
                 .setAutoCancel(true)
-                .setVibrate(new long[]{200, 200, 200, 200, 600})
+                .setVibrate(new long[]{100, 200, 100, 200, 300, 200})
                 .extend(extender);
 
-        NotificationManagerCompat.from(context).notify(NOTIFICATION_IDENTIFIER_BATTLE, notificationBuilder.build());
+        NotificationManagerCompat.from(context).notify(notificationNumber++, notificationBuilder.build());
     }
 
     private static @NonNull ArrayList<NotificationCompat.Action> generateBattleActions(@NonNull Context context){
@@ -52,7 +52,7 @@
         Intent startBattle = new Intent(context, BattleFightActivity.class);
         startBattle.putExtra(BattleFightActivity.FROM, BattleUtility.BATTLE_OPTION_FIGHT);
         PendingIntent pendingFightIntent = PendingIntent.getActivity(context,
-                NOTIFICATION_IDENTIFIER_BATTLE_FIGHT, startBattle,
+                notificationNumber, startBattle,
                 PendingIntent.FLAG_ONE_SHOT | PendingIntent.FLAG_CANCEL_CURRENT);
 
         NotificationCompat.Action fightAction = new NotificationCompat.Action.Builder(
@@ -63,7 +63,7 @@
 
         Intent sneakBattle = new Intent(context, BattleSneakActivity.class);
         PendingIntent pendingSneakIntent = PendingIntent.getActivity(context,
-                NOTIFICATION_IDENTIFIER_BATTLE_SNEAK, sneakBattle,
+                notificationNumber, sneakBattle,
                 PendingIntent.FLAG_ONE_SHOT | PendingIntent.FLAG_CANCEL_CURRENT);
 
         NotificationCompat.Action sneakAction = new NotificationCompat.Action.Builder(
@@ -75,7 +75,7 @@
         Intent runBattle = new Intent(context, SpoilsActivity.class);
         runBattle.putExtra(SpoilsActivity.CONCLUSION, BattleUtility.BATTLE_OPTION_RUN);
         PendingIntent pendingRunIntent = PendingIntent.getActivity(context,
-                NOTIFICATION_IDENTIFIER_BATTLE_RUN, runBattle,
+                notificationNumber, runBattle,
                 PendingIntent.FLAG_ONE_SHOT | PendingIntent.FLAG_CANCEL_CURRENT);
 
         NotificationCompat.Action runAction = new NotificationCompat.Action.Builder(
@@ -88,5 +88,10 @@
         battleActions.add(sneakAction);
         battleActions.add(runAction);
         return battleActions;
+    }
+
+    public static void cancelNotification(@NonNull Context context){
+        NotificationManager manager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
+        manager.cancelAll();
     }
 }
Index: LJ Watch/src/main/java/com/lchrislee/longjourney/activities/BattleFightActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- LJ Watch/src/main/java/com/lchrislee/longjourney/activities/BattleFightActivity.java	(revision 258a7390cb6c1f55b02f1a20f8383fdc2bfe7af3)
+++ LJ Watch/src/main/java/com/lchrislee/longjourney/activities/BattleFightActivity.java	(revision )
@@ -14,6 +14,7 @@
 import com.lchrislee.longjourney.model.actors.Monster;
 import com.lchrislee.longjourney.model.actors.Player;
 import com.lchrislee.longjourney.utility.BattleUtility;
+import com.lchrislee.longjourney.utility.NotificationUtility;
 
 public class BattleFightActivity extends Activity {
     public static final String FROM = "com.lchrislee.longjourney.activities.BattleFightActivity.FROM";
@@ -35,6 +36,7 @@
 
         Intent i = getIntent();
         if (i != null){
+            NotificationUtility.cancelNotification(this);
             int from = i.getIntExtra(FROM, -1);
             switch(from){
                 case BattleUtility.BATTLE_OPTION_SNEAK:
Index: LJ Watch/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- LJ Watch/src/main/AndroidManifest.xml	(revision 258a7390cb6c1f55b02f1a20f8383fdc2bfe7af3)
+++ LJ Watch/src/main/AndroidManifest.xml	(revision )
@@ -26,18 +26,18 @@
         <activity
             android:name=".activities.BattleEngageActivity"
             android:allowEmbedded="true"
+            android:excludeFromRecents="true"
             android:exported="true"
             android:label="@string/title_activity_engage_battle"
             android:noHistory="true"
-            android:excludeFromRecents="true"
             android:parentActivityName=".activities.TravelActivity">
         </activity>
         <activity
             android:name=".activities.BattleSneakActivity"
-            android:label="@string/title_activity_battle_sneak"
-            android:excludeFromRecents="true"
             android:allowEmbedded="true"
+            android:excludeFromRecents="true"
             android:exported="true"
+            android:label="@string/title_activity_battle_sneak"
             android:noHistory="true"
             android:parentActivityName=".activities.BattleEngageActivity">
         </activity>
@@ -45,8 +45,8 @@
             android:name=".activities.BattleFightActivity"
             android:allowEmbedded="true"
             android:exported="true"
-            android:noHistory="true"
-            android:label="@string/title_activity_battle">
+            android:label="@string/title_activity_battle"
+            android:noHistory="true">
         </activity>
         <activity
             android:name=".activities.SpoilsActivity"
@@ -55,6 +55,7 @@
             android:noHistory="true"
             android:parentActivityName=".activities.BattleFightActivity">
         </activity>
+
     </application>
 
 </manifest>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision 258a7390cb6c1f55b02f1a20f8383fdc2bfe7af3)
+++ .idea/modules.xml	(revision )
@@ -2,7 +2,7 @@
 <project version="4">
   <component name="ProjectModuleManager">
     <modules>
-      <module fileurl="file://$PROJECT_DIR$/LJ Watch/longjourney watch.iml" filepath="$PROJECT_DIR$/LJ Watch/longjourney watch.iml" />
+      <module fileurl="file://$PROJECT_DIR$/LJ Watch/LJ Watch.iml" filepath="$PROJECT_DIR$/LJ Watch/LJ Watch.iml" />
       <module fileurl="file://$PROJECT_DIR$/LongJourney.iml" filepath="$PROJECT_DIR$/LongJourney.iml" />
     </modules>
   </component>
\ No newline at end of file
Index: LJ Watch/src/main/java/com/lchrislee/longjourney/activities/BattleSneakActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- LJ Watch/src/main/java/com/lchrislee/longjourney/activities/BattleSneakActivity.java	(revision 258a7390cb6c1f55b02f1a20f8383fdc2bfe7af3)
+++ LJ Watch/src/main/java/com/lchrislee/longjourney/activities/BattleSneakActivity.java	(revision )
@@ -10,6 +10,7 @@
 
 import com.lchrislee.longjourney.R;
 import com.lchrislee.longjourney.utility.BattleUtility;
+import com.lchrislee.longjourney.utility.NotificationUtility;
 
 public class BattleSneakActivity extends Activity {
 
@@ -23,6 +24,12 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_sneak);
+
+        Intent i = getIntent();
+        if (i != null){
+            NotificationUtility.cancelNotification(this);
+        }
+
         final WatchViewStub stub = (WatchViewStub) findViewById(R.id.sneak_view_stub);
         stub.setOnLayoutInflatedListener(new WatchViewStub.OnLayoutInflatedListener() {
             @Override
